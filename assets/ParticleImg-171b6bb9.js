var f=Object.defineProperty;var l=(r,t,s)=>t in r?f(r,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[t]=s;var i=(r,t,s)=>(l(r,typeof t!="symbol"?t+"":t,s),s);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))h(e);new MutationObserver(e=>{for(const a of e)if(a.type==="childList")for(const n of a.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&h(n)}).observe(document,{childList:!0,subtree:!0});function s(e){const a={};return e.integrity&&(a.integrity=e.integrity),e.referrerPolicy&&(a.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?a.credentials="include":e.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function h(e){if(e.ep)return;e.ep=!0;const a=s(e);fetch(e.href,a)}})();class u{constructor(t,s,h,e,a,n){i(this,"effect");i(this,"x");i(this,"y");i(this,"originX");i(this,"originY");i(this,"size");i(this,"vx");i(this,"vy");i(this,"color");i(this,"ease");i(this,"dx");i(this,"dy");i(this,"distance");i(this,"force");i(this,"angle");i(this,"friction");this.effect=t,this.x=s,this.y=h,this.originX=Math.floor(s),this.originY=Math.floor(h),this.color=e,this.vx=0,this.vy=0,this.dx=0,this.dy=0,this.distance=0,this.force=0,this.angle=0,this.size=this.effect.gap,this.ease=a,this.friction=n}draw(t){t.fillStyle=this.color,t.fillRect(this.x,this.y,this.size,this.size)}update(){typeof this.effect.mouse.x=="number"?this.dx=this.effect.mouse.x-this.x:this.dx=this.effect.mouse.radius,typeof this.effect.mouse.y=="number"?this.dy=this.effect.mouse.y-this.y:this.dy=this.effect.mouse.radius,this.distance=this.dx*this.dx+this.dy*this.dy,this.force=-this.effect.mouse.radius/this.distance,this.distance<this.effect.mouse.radius&&(this.angle=Math.atan2(this.dy,this.dx),this.vx+=this.force*Math.cos(this.angle),this.vy+=this.force*Math.sin(this.angle)),this.x+=(this.vx*=this.friction)+(this.originX-this.x)*this.ease,this.y+=(this.vy*=this.friction)+(this.originY-this.y)*this.ease}}class y{constructor(t,s={particleSize:5,ease:.1,friction:.9,radius:3e3}){i(this,"canvas");i(this,"img");i(this,"ctx");i(this,"particlesArray");i(this,"centerX");i(this,"centerY");i(this,"x");i(this,"y");i(this,"gap");i(this,"animationID");i(this,"mouse");i(this,"settings");this.settings=s,this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d",{willReadFrequently:!0}),this.img=document.createElement("img"),this.appendCanvas(t.canvas_width,t.canvas_height,t.img_src,t.parent),this.particlesArray=[],this.gap=typeof s.particleSize=="number"?s.particleSize:5,this.mouse={radius:typeof s.radius=="number"?s.radius:3e3,x:void 0,y:void 0},this.canvas.addEventListener("touchmove",h=>{this.mouse.x=h.touches[0].clientX,this.mouse.y=h.touches[0].clientY-this.canvas.getBoundingClientRect().top}),this.canvas.addEventListener("touchend",()=>{this.mouse.x=void 0,this.mouse.y=void 0}),this.canvas.addEventListener("mousemove",h=>{this.mouse.x=h.offsetX,this.mouse.y=h.offsetY}),this.canvas.addEventListener("mouseleave",()=>{this.mouse.x=void 0,this.mouse.y=void 0}),this.animate=this.animate.bind(this)}init(){this.ctx.drawImage(this.img,this.x===void 0?0:this.x,this.y===void 0?0:this.y);const t=this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height).data;for(let s=0;s<this.canvas.height;s+=this.gap)for(let h=0;h<this.canvas.width;h+=this.gap){const e=(s*this.canvas.width+h)*4,a=t[e],n=t[e+1],o=t[e+2],c=t[e+3],d=`rgb(${a}, ${n}, ${o})`;c>0&&this.particlesArray.push(new u(this,h,s,d,typeof this.settings.ease=="number"?this.settings.ease:.1,typeof this.settings.friction=="number"?this.settings.friction:.9))}}drawParticles(){this.particlesArray.forEach(t=>{t.draw(this.ctx)})}updateParticles(){this.particlesArray.forEach(t=>{t.update()})}appendCanvas(t,s,h,e){this.img.src=h,this.canvas.width=t,this.canvas.height=s,this.img.addEventListener("load",()=>{this.centerX=this.canvas.width*.5,this.centerY=this.canvas.height*.5,this.x=this.centerX-this.img.width*.5,this.y=this.centerY-this.img.height*.5,this.init(),this.animate()}),this.img.addEventListener("error",()=>{this.ctx.font="48px serif",this.ctx.textAlign="center",this.ctx.fillStyle="white",this.ctx.fillText("Image src doesn't exist",this.canvas.width/2,this.canvas.height/2)}),e.append(this.canvas,this.img),e.style.display="flex",e.style.justifyContent="center",e.style.overflow="hidden",this.canvas.style.backgroundColor="rgba(0, 0, 0, 0)",this.img.style.display="none"}animate(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.drawParticles(),this.updateParticles(),this.animationID=requestAnimationFrame(this.animate)}setGap(t){typeof t=="number"&&(this.animationID&&cancelAnimationFrame(this.animationID),this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.gap=Math.floor(t),this.particlesArray=[],this.init(),this.animate())}setFriction(t){typeof t=="number"&&this.particlesArray.forEach(s=>s.friction=t)}setEase(t){typeof t=="number"&&this.particlesArray.forEach(s=>s.ease=t)}setRadius(t){typeof t=="number"&&(this.mouse.radius=Math.floor(t))}}export{y as E};
